// Booking System JDL
entity Appointment {
startTime Instant required,
endTime Instant required,
status AppointmentStatus required
}
entity Service {
name String required minlength(3) maxlength(50),
description TextBlob,
price BigDecimal required min(0)
}
enum AppointmentStatus {
REQUESTED, // New status for initial booking request
SCHEDULED,
COMPLETED,
CANCELLED
}
relationship ManyToOne {
Appointment{user(login) required} to User with builtInEntity,
Appointment{service(name)} to Service
}
service Appointment, Service with serviceClass
paginate Appointment, Service with pagination
dto Appointment, Service with mapstruct
No changes were required to the JDL based on the updated user story.  The addition of the `REQUESTED` status in the original prompt already addressed the core change related to the admin approval workflow.  The other details mentioned in the user story (email notifications, cancellation logic, preventing overlaps, admin panel) are implementation details that will be handled in the application code, not the JDL.  The JDL defines the data model, and the updated user story doesn't require changes to that model.