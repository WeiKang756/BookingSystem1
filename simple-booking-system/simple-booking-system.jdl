// Booking System JDL
entity Appointment {
startTime Instant required,
endTime Instant required,
status AppointmentStatus required
}
entity Service {
name String required minlength(3) maxlength(50),
description TextBlob,
price BigDecimal required min(0)
}
enum AppointmentStatus {
REQUESTED,
SCHEDULED,
COMPLETED,
CANCELLED
}
relationship ManyToOne {
Appointment{user(login) required} to User with builtInEntity,
Appointment{service(name)} to Service
}
service Appointment, Service with serviceClass
paginate Appointment, Service with pagination
dto Appointment, Service with mapstruct
No changes were necessary to the JDL. The updated user story adds details about the application's behavior and UI, but it doesn't introduce new entities or relationships, or modify existing ones.  The core data model remains the same.  Features like email notifications, cancellation logic, preventing overlapping appointments, and the admin approval workflow will be implemented in the application code, not the JDL.